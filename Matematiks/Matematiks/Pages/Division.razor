@page "/division"

@inject ISessionService _sessionService;

<PageTitle>Division</PageTitle>

<h1 class="display-1"> @left : @right = @result</h1>

<NumPad Input="Input" Delete="Delete" />

<p> @correctCounter | @deleteCounter </p>

@code {
    private int left = 0;

    private int right = 0;

    private string result = string.Empty;

    private int correctCounter = 0;
    private int deleteCounter = 0;

    private Session session = new(SessionType.Division);

    private void Generate()
    {
        var tempLeft = Random.Shared.Next(1, 11);
        var tempRight = Random.Shared.Next(1, 11);
        var tempResult = tempLeft * tempRight;

        left = tempResult;
        right = tempRight;        

        result = string.Empty;
    }

    private void Input(int number)
    {
        if (result.Count() >= 2)
        {
            return;
        }

        result += number;

        if (int.TryParse(result, out var intResult))
        {
            if (intResult == left / right)
            {
                correctCounter++;

                session.CorrectCounter = correctCounter;

                SaveState();
                Generate();
            }
        }
    }

    private void Delete()
    {
        if (string.IsNullOrWhiteSpace(result))
        {
            return;
        }

        // Clear the entire input instead of just removing one character
        result = string.Empty;
        deleteCounter++;

        session.DeleteCounter = deleteCounter;
        SaveState();
    }

    protected override Task OnInitializedAsync()
    {
        Generate();

        return base.OnInitializedAsync();
    }

    private void SaveState()
    {
        session.LastActionTime = DateTime.Now;
        _sessionService.SaveSession(session);
    }  
}
